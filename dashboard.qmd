---
title: "Wenner Wine"
format: 
  dashboard: 
    orientation: rows
    logo: wine.ico
    include-in-header:
    - text: |
        <link rel = "shortcut icon" href = "wine.ico" />
    theme: 
      - minty
      - custom.scss
---




```{r}
#| eval: true
#| include: false

source(here::here('R', '01-update.R'))
```

# Wine List

## {.sidebar}

```{r eval=TRUE}

is_small <- FALSE

        div(style = css(fontFamily = 'Segoe UI',
                        fontSize = '12.5px'),
            filter_checkbox("cold", "Cold", shared_data, ~AnyCold,
                            inline = is_small),
            filter_checkbox("type", "Type", shared_data, ~Type,
                            inline = is_small),
            filter_checkbox("blend", "Blend", shared_data, ~Blend,
                            inline = is_small),
            #filter_slider("price", "Price", shared_data, ~Price, width = "100%",pre = '$'),
            filter_checkbox("price2", "Price", shared_data, ~Price2,
                            inline = is_small),
            filter_slider("vintage", "Vintage", shared_data, ~Vnt, width = "100%",sep = ''),
            filter_slider("quant", "Quantity", shared_data, ~Qty, width = "100%"),
            filter_select("var", "Varietal", shared_data, ~Varietal),
            filter_select("prod", "Producer", shared_data, ~Producer)
        )

```

## Main

```{r}
#| padding: 0

title_text <- div(style = 'display: inline; min-height: 1rem; font-size: x-small; margin: 3px;',
                  class = 'title',
                   tags$strong(sum(wine_tbl$Qty), ' Total: '),
                 color_img('red'), tags$strong(color_cnt('red')),' reds | ',
                 color_img('white'), tags$strong(color_cnt('white')),' whites | ',
                 color_img('rose'), tags$strong(color_cnt('rose')),' rosés | ',
                 color_img('sparkling'), tags$strong(color_cnt('sparkling')),' bubbles | ',
                 color_img('sweet'), tags$strong(color_cnt('sweet')), 'sweet/port')

t <- reactable(shared_data, 'wine',
                             # theme = reactableThemeWine(searchInputStyle = list(width = "100%")),
                  fontSize = '12px',
                  searchable = TRUE,
                  columns = list(
                      AnyCold = colDef(show = F),
                      Cold = colDef(show = F),
                      Wine = colDef(html = TRUE,
                                    minWidth = 100),
                      Vnt = colDef(sortNALast = T,
                                   minWidth = 50),
                      Qty = colDef(minWidth = 40,
                                                                       html = TRUE, # Render as HTML
      footer = JS("function(column, state) {
        let total = 0;
        state.sortedData.forEach(function(row) {
          total += row[column.id];
        });
        return '<b>' + total + '</b>';
      }")
                                   ),
                      Varietal = colDef(show = T, minWidth = 80),
                      Region = colDef(minWidth = 80),
                      SubRegion = colDef(minWidth = 90),
                      Location = colDef(minWidth = 80),

                      Begin= colDef(sortNALast = T,
                                    minWidth = 50),
                      End = colDef(sortNALast = T,
                                   minWidth = 50),
                      Rating = colDef(html = TRUE,
                                      sortNALast = T,
                                      minWidth = 40),
                      Price = colDef(format = colFormat(prefix = "$",digits = 0),
                                     sortNALast = T, minWidth = 50,
                                    #footer = \(x) tags$b(scales::dollar(sum(x)))
                                    html = TRUE, # Render as HTML
      footer = JS("function(column, state) {
        let total = 0;
        state.sortedData.forEach(function(row) {
          total += row['Qty'] * row['Price'];
        });
          // Format the total with thousands separator and no decimals
        let formattedTotal = total.toLocaleString('en-US', {
          style: 'decimal',
          minimumFractionDigits: 0,
          maximumFractionDigits: 0
        });
        return '<b>$' + formattedTotal + '</b>';
      }")
      
                                    ),
                      Price2 = colDef(show = FALSE),
                      Blend = colDef(show = FALSE,
                                     cell = function(value) {
                          # Render ✓
                          if (value == 'Blend') "\u2713" else ""
                      }, minWidth = 40),
                      Type = colDef(show = FALSE,minWidth = 75),
                      TypeColor = colDef(show = FALSE),
                      VarietalInspect = colDef(show = FALSE),
                      Color = colDef(show = FALSE),
                      Country = colDef(minWidth = 75),
                      Producer = colDef(show = F),

                      Store = colDef(minWidth = 75),
                      Purchased = colDef(minWidth = 65)
                  ))


withtitle <- htmlwidgets::prependContent(t, 
                                         title_text)


withtitle


```

# Consumed

```{r}
#| padding: 0

        reactable(shared_data_consumed, 'wine',
                  fontSize = '12px',
                  searchable = TRUE,
                  columns = list(
                      Wine = colDef(html = TRUE))
        )

```


# Inspect 

## Page {.tabset}

### Cold Status

```{r}
#| expandable: false
#| padding: 0

reactable(inspect_tbl, 'wine',
                fontSize = '12px',
                details = function(index){
                  dropdown <- wine_tbl |> filter(Type==inspect_tbl$Type[index],
                                                 VarietalInspect==inspect_tbl$VarietalInspect[index]) |>
select(Wine, Price, Vnt, Location, Country, Region, SubRegion, Store, Purchased)

                  htmltools::div(style='padding: 1 rem',
                                 reactable::reactable(dropdown,
                                           outlined = TRUE,
                                           columns = list(Wine = colDef(html = T),
                                                          Price = colDef(format = colFormat(prefix = "$",digits = 0)))))
                },

                searchable = TRUE,
                columns = list(
                  Type = colDef(show = FALSE),
                  VarietalInspect = colDef(name = 'Varietal'),
                  TypeColor = colDef(name = 'Type', html = TRUE),
                  `% Cold` = colDef(format = colFormat(perc = TRUE,digits = 0))),
                rowStyle = function(index) {
                  if (inspect_tbl[index, "% Cold"] < 0.1 | inspect_tbl[index,"Cold"]<=1) {
                    list(fontWeight = "bold",
                         color = "darkred")
                  }
                  }
      )

```


### Space

```{r}
#| expandable: false
#| padding: 0

reactable(room_tbl, 'wine',
                fontSize = '12px',
                details = function(index){
                  dropdown <- room_tbl_dropdown |> filter(Location==room_tbl$Location[index])

                  htmltools::div(style='padding: 1 rem',
                                 reactable::reactable(dropdown|>
                                                        select(-Location),
                                                      outlined = TRUE,
        details = function(index2){
          dropdown2 <- room_tbl_dropdown2 |>
                        filter(Location == dropdown$Location[index2],
                               Bin == dropdown$Bin[index2]) |>
                        select(-Location, -Bin) |> select(Wine, everything())

          htmltools::div(style='padding: 1 rem',
                         reactable::reactable(dropdown2,
                                              outlined = TRUE,
                                              columns = list(
                                                Wine = colDef(html = TRUE),
                                                Price = colDef(format = colFormat(prefix = "$",digits = 0)))))
          }
        )
        )
                },
                searchable = TRUE
      )

```


# Maps

## Row

### Column {width=25%}

```{r}
#| padding: 0
hc_us
```

### Column {width=50%}

```{r}
#| padding: 0
hc
```

### Column {width=25%}


```{r}
#| padding: 0
hc_eur
```

# Plots

## Row

```{r}
#| padding: 0
ggplotly(gg) %>%
            layout(font = list(family = c('"Segeo UI","Open Sans", Arial'))) ##'"Segoe UI", Calibri, Tahoma, Arial, sans-serif'))
```

```{r}
#| padding: 0
ggplotly(gg2) %>%
            layout(font = list(family = c('"Segeo UI","Open Sans", Arial'))) ##'"Segoe UI", Calibri, Tahoma, Arial, sans-serif'))
```


